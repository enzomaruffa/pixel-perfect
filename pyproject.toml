[project]
name = "pixel-perfect"
version = "0.1.0"
description = "A composable pipeline framework for sophisticated pixel-level image transformations"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "click>=8.2.1",
    "numpy>=2.2.6",
    "pillow>=11.3.0",
    "psutil>=7.0.0",
    "pydantic>=2.11.7",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.2.1",
    "pytest-timeout>=2.4.0",
    "pyyaml>=6.0.2",
    "rich>=14.1.0",
    "scikit-image>=0.25.2",
]

[project.scripts]
pixel-transform = "transform:main"

[dependency-groups]
dev = [
    "basedpyright>=1.31.3",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.10",
]

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 100
src = ["src"]  # Tell ruff your code is in src/

exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
]

ignore = [
    "E501",  # line too long (formatter handles this)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101"]
"**/test_*.py" = ["S101"]
"src/**/test_*.py" = ["S101"]  # Allow asserts in co-located test files

[tool.ruff.lint.isort]
combine-as-imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["src"]
pythonpath = ["src"]  # Important for src layout
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
addopts = "-v --tb=short"

[tool.basedpyright]
pythonVersion = "3.10"
typeCheckingMode = "standard"  # or "strict" if you want stricter checking
include = ["src"]
exclude = [
    "**/__pycache__",
    ".venv",
    "venv",
]

# Specific settings
reportMissingImports = true
reportMissingTypeStubs = false  # Don't complain about missing stubs for third-party libs
reportUnknownMemberType = false  # PIL/Pillow has poor type hints
reportUnknownArgumentType = false  # Same for numpy
reportUnknownVariableType = false
reportPrivateUsage = false  # Disabled to allow testing protected methods
reportUnnecessaryTypeIgnoreComment = true
reportImplicitStringConcatenation = true

# For your image processing project specifically
reportIncompatibleMethodOverride = true  # Important for BaseOperation subclasses
reportUninitializedInstanceVariable = true
